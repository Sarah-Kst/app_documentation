{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"How to write and publish documentation Markdown tools Markdown is a lighweight markup language, easier to deal with than html, and designed for the web. %%{init: {'theme': 'forest' } }%% graph LR A(Mardown \\n file) --> B(Markdown \\n Processor) B --> C(HTML doc \\n generation) C -->D(Website) For creating static webpages from Markdown files: MkDocs Jekyll Read The Docs ... The generated documentation should be version-controlled and pushed on the web using: GitHub Bitbucket GitLab ... Creating documentation with MkDocs Installation To install MkDocs, run the following command from the command line: pip install mkdocs To create your documentation project (navigate to your repo folder first): python -m mkdocs new my-documentation The my-documentation just created should look like this: <repo>\\my-documentation | |- docs\\index.md |- mkdocs.yml There's a single configuration file named mkdocs.yml , and a folder named docs that will contain your documentation source files. Local build To preview documentation: python -m mkdocs serve Preview is available at http://127.0.0.1:8000/ . To build html documentation: python -m mkdocs build Deploy pages on GitHub python -m mkdocs gh-deploy Important packages markdown-include Export to pdf wkhtmltopdf (https://wkhtmltopdf.org/) is abinary file that can be used to export a webpage to pdf. wkhtmltopdf [URL] [OUTPUT] Note : it is possible to implement a GitHub action that generate both the documentation webpage and the pdf file each time a commit is pushed.","title":"Home"},{"location":"#how-to-write-and-publish-documentation","text":"","title":"How to write and publish documentation"},{"location":"#markdown-tools","text":"Markdown is a lighweight markup language, easier to deal with than html, and designed for the web. %%{init: {'theme': 'forest' } }%% graph LR A(Mardown \\n file) --> B(Markdown \\n Processor) B --> C(HTML doc \\n generation) C -->D(Website) For creating static webpages from Markdown files: MkDocs Jekyll Read The Docs ... The generated documentation should be version-controlled and pushed on the web using: GitHub Bitbucket GitLab ...","title":"Markdown tools"},{"location":"#creating-documentation-with-mkdocs","text":"","title":"Creating documentation with MkDocs"},{"location":"#installation","text":"To install MkDocs, run the following command from the command line: pip install mkdocs To create your documentation project (navigate to your repo folder first): python -m mkdocs new my-documentation The my-documentation just created should look like this: <repo>\\my-documentation | |- docs\\index.md |- mkdocs.yml There's a single configuration file named mkdocs.yml , and a folder named docs that will contain your documentation source files.","title":"Installation"},{"location":"#local-build","text":"To preview documentation: python -m mkdocs serve Preview is available at http://127.0.0.1:8000/ . To build html documentation: python -m mkdocs build","title":"Local build"},{"location":"#deploy-pages-on-github","text":"python -m mkdocs gh-deploy","title":"Deploy pages on GitHub"},{"location":"#important-packages","text":"markdown-include","title":"Important packages"},{"location":"#export-to-pdf","text":"wkhtmltopdf (https://wkhtmltopdf.org/) is abinary file that can be used to export a webpage to pdf. wkhtmltopdf [URL] [OUTPUT] Note : it is possible to implement a GitHub action that generate both the documentation webpage and the pdf file each time a commit is pushed.","title":"Export to pdf"}]}